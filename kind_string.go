// Code generated by "stringer -type=kind"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[kfile-0]
	_ = x[kassignstmt-1]
	_ = x[kblockstmt-2]
	_ = x[kifstmt-3]
	_ = x[kemptystmt-4]
	_ = x[kexprstmt-5]
	_ = x[kwhilestmt-6]
	_ = x[kreturnstmt-7]
	_ = x[karraylit-8]
	_ = x[knumlit-9]
	_ = x[kstringlit-10]
	_ = x[kfunclit-11]
	_ = x[kident-12]
	_ = x[kunaryexpr-13]
	_ = x[kbinaryexpr-14]
	_ = x[kindexexpr-15]
	_ = x[kselectorexpr-16]
	_ = x[kkvexpr-17]
	_ = x[kparenexpr-18]
	_ = x[kcallexpr-19]
}

const _kind_name = "kfilekassignstmtkblockstmtkifstmtkemptystmtkexprstmtkwhilestmtkreturnstmtkarraylitknumlitkstringlitkfunclitkidentkunaryexprkbinaryexprkindexexprkselectorexprkkvexprkparenexprkcallexpr"

var _kind_index = [...]uint8{0, 5, 16, 26, 33, 43, 52, 62, 73, 82, 89, 99, 107, 113, 123, 134, 144, 157, 164, 174, 183}

func (i kind) String() string {
	if i < 0 || i >= kind(len(_kind_index)-1) {
		return "kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _kind_name[_kind_index[i]:_kind_index[i+1]]
}
